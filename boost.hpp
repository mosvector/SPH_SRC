/* Autogenerated header */
#pragma once

namespace/*or class/struct?*/ boost
{
  // Nested containers:
  class/*or struct*/ bad_weak_ptr : public exception
  {
    // VFTable. Offset=0, Size=2, Start=2
    // Corresponding base: std::exception
    // Owner: SophisXML.dll
    // VFTable with 0 offset end

  public:
  };

  namespace/*or class/struct?*/ detail
  {
    // Nested containers:
    class/*or struct*/ local_counted_base
    {
      // VFTable. Offset=0, Size=3, Start=0
      // Owner: SophisXML.dll
      // Added virtual functions:
      public: virtual void unknown_vf_0_0(void); // 0
      public: virtual void unknown_vf_0_1(void) = 0; // 1
      public: virtual void unknown_vf_0_2(void) = 0; // 2
      // VFTable with 0 offset end

    public:
    };

    struct mono_platform_timepoint
    {
    public:
    };

    namespace/*or class/struct?*/ win32
    {
      // Nested containers:
      class/*or struct*/ handle_manager
      {
        // Functions:
        public: boost::detail::win32::handle_manager::~handle_manager(void)
        public: void * boost::detail::win32::handle_manager::duplicate(void) const
      public:
      };


    };


  };

  class/*or struct*/ exception
  {
    // VFTable. Offset=0, Size=1, Start=0
    // Owner: SophisXML.dll
    // Added virtual functions:
    public: virtual void unknown_vf_0_0(void) = 0; // 0
    // VFTable with 0 offset end

  public:
  };

  namespace/*or class/struct?*/ exception_detail
  {
    // Nested containers:
    class/*or struct*/ clone_base
    {
      // VFTable. Offset=0, Size=3, Start=0
      // Owner: SophisXML.dll
      // Added virtual functions:
      public: virtual void unknown_vf_0_0(void) = 0; // 0
      public: virtual void unknown_vf_0_1(void) = 0; // 1
      public: virtual void unknown_vf_0_2(void); // 2
      // VFTable with 0 offset end

    public:
    };


  };

  class/*or struct*/ lock_error : public thread_exception
  {
    // VFTable. Offset=0, Size=2, Start=2
    // Corresponding base: boost::thread_exception
    // Owner: SophisXML.dll
    // VFTable with 0 offset end

  public:
  };

  namespace/*or class/struct?*/ numeric
  {
    // Nested containers:
    class/*or struct*/ bad_numeric_cast : public bad_cast
    {
      // VFTable. Offset=0, Size=2, Start=2
      // Corresponding base: std::bad_cast
      // Owner: SophisXML.dll
      // VFTable with 0 offset end

    public:
    };

    class/*or struct*/ negative_overflow : public bad_numeric_cast
    {
      // VFTable. Offset=0, Size=2, Start=2
      // Corresponding base: numeric::numeric::bad_numeric_cast
      // Owner: SophisXML.dll
      // VFTable with 0 offset end

    public:
    };

    class/*or struct*/ positive_overflow : public bad_numeric_cast
    {
      // VFTable. Offset=0, Size=2, Start=2
      // Corresponding base: numeric::numeric::bad_numeric_cast
      // Owner: SophisXML.dll
      // VFTable with 0 offset end

    public:
    };


  };

  namespace/*or class/struct?*/ system
  {
    // Nested containers:
    namespace/*or class/struct?*/ detail
    {
      // Nested containers:
      class/*or struct*/ generic_error_category : public error_category
      {
        // VFTable. Offset=0, Size=7, Start=0
        // Corresponding base: system::system::error_category
        // Owner: SophisXML.dll
        // Added virtual functions:
        public: virtual void unknown_vf_0_0(void); // 0
        public: virtual void unknown_vf_0_1(void); // 1
        public: virtual void unknown_vf_0_2(void); // 2
        public: virtual void unknown_vf_0_3(void); // 3
        public: virtual void unknown_vf_0_4(void); // 4
        public: virtual void unknown_vf_0_5(void); // 5
        public: virtual void unknown_vf_0_6(void); // 6
        // VFTable with 0 offset end

      public:
      };

      class/*or struct*/ interop_error_category : public error_category
      {
        // VFTable. Offset=0, Size=7, Start=0
        // Corresponding base: system::system::error_category
        // Owner: SophisXML.dll
        // Added virtual functions:
        public: virtual void unknown_vf_0_0(void); // 0
        public: virtual void unknown_vf_0_1(void); // 1
        public: virtual void unknown_vf_0_2(void); // 2
        public: virtual void unknown_vf_0_3(void); // 3
        public: virtual void unknown_vf_0_4(void); // 4
        public: virtual void unknown_vf_0_5(void); // 5
        public: virtual void unknown_vf_0_6(void); // 6
        // VFTable with 0 offset end

      public:
      };

      class/*or struct*/ system_error_category : public error_category
      {
        // VFTable. Offset=0, Size=7, Start=0
        // Corresponding base: system::system::error_category
        // Owner: SophisXML.dll
        // Added virtual functions:
        public: virtual void unknown_vf_0_0(void); // 0
        public: virtual void unknown_vf_0_1(void); // 1
        public: virtual void unknown_vf_0_2(void); // 2
        public: virtual void unknown_vf_0_3(void); // 3
        public: virtual void unknown_vf_0_4(void); // 4
        public: virtual void unknown_vf_0_5(void); // 5
        public: virtual void unknown_vf_0_6(void); // 6
        // VFTable with 0 offset end

      public:
      };


    };

    class/*or struct*/ error_category
    {
    public:
    };

    class/*or struct*/ system_error : public runtime_error
    {
      // VFTable. Offset=0, Size=2, Start=2
      // Corresponding base: std::runtime_error
      // Owner: SophisXML.dll
      // VFTable with 0 offset end

    public:
    };


  };

  class/*or struct*/ this_thread
  {
    // Functions:
    bool interruptible_wait(void *, struct boost::detail::mono_platform_timepoint const &)
  public:
  };

  class/*or struct*/ thread_exception : public system_error
  {
    // VFTable. Offset=0, Size=2, Start=2
    // Corresponding base: system::system::system_error
    // Owner: SophisXML.dll
    // VFTable with 0 offset end

  public:
  };

  class/*or struct*/ thread_resource_error : public thread_exception
  {
    // VFTable. Offset=0, Size=2, Start=2
    // Corresponding base: boost::thread_exception
    // Owner: SophisXML.dll
    // VFTable with 0 offset end

  public:
  };


};
